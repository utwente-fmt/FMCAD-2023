#structural info: class level
INTERNAL: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
external_declaration: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
#declaration: de.tub.pes.syscir.engine.nodetransformer.DeclarationTransformer
declaration: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
declaration_specifiers: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
class_specifier: de.tub.pes.syscir.engine.nodetransformer.ClassSpecifierTransformer
base_clause: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
base_specifier: de.tub.pes.syscir.engine.nodetransformer.BaseSpecifierTransformer
base_specifier_access_modifier: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
access_specifier: de.tub.pes.syscir.engine.nodetransformer.AccessSpecifierTransformer
member_declaration: de.tub.pes.syscir.engine.nodetransformer.MemberDeclarationTransformer
member_declarator_list: de.tub.pes.syscir.engine.nodetransformer.DeclaratorListTransformer
member_declarator: de.tub.pes.syscir.engine.nodetransformer.DeclaratorTransformer
sc_port_specifier: de.tub.pes.syscir.engine.nodetransformer.SCPortSpecifierTransformer
function_declarator: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer

#type specification
type_modifiers: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
type_qualifier: de.tub.pes.syscir.engine.nodetransformer.TypeQualifierTransformer
storage_class_specifier: de.tub.pes.syscir.engine.nodetransformer.StorageClassSpecifierTransformer
type_name: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
builtin_type_specifier: de.tub.pes.syscir.engine.nodetransformer.BuiltinTypeSpecifierTransformer
qualified_type: de.tub.pes.syscir.engine.nodetransformer.QualifiedTypeTransformer
qualified_id: de.tub.pes.syscir.engine.nodetransformer.QualifiedIdTransformer
template_argument_list: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
template_argument: de.tub.pes.syscir.engine.nodetransformer.TemplateArgumentTransformer
enum_specifier: de.tub.pes.syscir.engine.nodetransformer.EnumSpecifierTransformer
# enumerator_list
# enumerator

#function and ctor definitions
sc_main_declaration: de.tub.pes.syscir.engine.nodetransformer.SCMainDeclarationTransformer
function_definition: de.tub.pes.syscir.engine.nodetransformer.FunctionDefinitionTransformer
systemCRoutine: de.tub.pes.syscir.engine.nodetransformer.SystemCRoutineTransformer
ctor_definition: de.tub.pes.syscir.engine.nodetransformer.CTORDefinitionTransformer
ctor_initializer: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
parameter_list: de.tub.pes.syscir.engine.nodetransformer.ParameterListTransformer
parameter_declaration: de.tub.pes.syscir.engine.nodetransformer.ParameterDeclarationTransformer
sc_method: de.tub.pes.syscir.engine.nodetransformer.SCMethodTransformer
sc_thread: de.tub.pes.syscir.engine.nodetransformer.SCThreadTransformer
sc_cthread: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
sc_method_block: de.tub.pes.syscir.engine.nodetransformer.SCMethodBlockTransformer
sc_thread_block: de.tub.pes.syscir.engine.nodetransformer.SCThreadBlockTransformer
sc_cthread_block: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
sc_sensitive: de.tub.pes.syscir.engine.nodetransformer.SCSensitiveTransformer
superclass_init: de.tub.pes.syscir.engine.nodetransformer.SuperClassInitTransformer


#expression stuff inside functions
block: de.tub.pes.syscir.engine.nodetransformer.BlockTransformer
block_statement: de.tub.pes.syscir.engine.nodetransformer.BlockStatementTransformer
init_declarator_list: de.tub.pes.syscir.engine.nodetransformer.DeclaratorListTransformer
init_declarator: de.tub.pes.syscir.engine.nodetransformer.DeclaratorTransformer
declarator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
declarator_suffixes: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
initializer: de.tub.pes.syscir.engine.nodetransformer.InitializerTransformer
array_initializer: de.tub.pes.syscir.engine.nodetransformer.ArrayInitializerTransformer
assignment: de.tub.pes.syscir.engine.nodetransformer.AssignmentTransformer
expression_assignment: de.tub.pes.syscir.engine.nodetransformer.AssignmentTransformer
constant: de.tub.pes.syscir.engine.nodetransformer.ConstantTransformer
postfix_expression: de.tub.pes.syscir.engine.nodetransformer.PostfixExpressionTransformer
primary_expression: de.tub.pes.syscir.engine.nodetransformer.PrimaryExpressionTransformer
constant_expression: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
arrayaccess_expression: de.tub.pes.syscir.engine.nodetransformer.ArrayAccessExpressionTransformer
id_expression: de.tub.pes.syscir.engine.nodetransformer.IDExpressionTransformer
dereferencing_operator: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
arguments: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
arguments_list: de.tub.pes.syscir.engine.nodetransformer.ArgumentsListTransformer
labeled_statement: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
this_node: de.tub.pes.syscir.engine.nodetransformer.ThisNodeTransformer

#loops and branches
if_statement: de.tub.pes.syscir.engine.nodetransformer.IfStatementTransformer
questionmark_expression: de.tub.pes.syscir.engine.nodetransformer.QuestionmarkExpressionTransformer
while_statement: de.tub.pes.syscir.engine.nodetransformer.WhileStatementTransformer
do_statement: de.tub.pes.syscir.engine.nodetransformer.DoStatementTransformer
for_statement: de.tub.pes.syscir.engine.nodetransformer.ForStatementTransformer
for_init: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
for_condition: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
for_update: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
for_init: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
for_block: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
statement_expression_list: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer
return_statement: de.tub.pes.syscir.engine.nodetransformer.ReturnStatementTransformer
continue_statement: de.tub.pes.syscir.engine.nodetransformer.ContinueStatementTransformer
break_statement: de.tub.pes.syscir.engine.nodetransformer.BreakStatementTransformer
unary_expression: de.tub.pes.syscir.engine.nodetransformer.UnaryExpressionTransformer
switch_statement: de.tub.pes.syscir.engine.nodetransformer.SwitchStatementTransformer
switch_label: de.tub.pes.syscir.engine.nodetransformer.DefaultTransformer

#arithmetic operators
add_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
subtract_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
mul_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
div_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
mod_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
bitwise_and_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
bitwise_or_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
bitwise_xor_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
and_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
or_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
eq_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
lt_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
gt_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
le_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
ge_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
neq_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
left_shift_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
right_shift_node: de.tub.pes.syscir.engine.nodetransformer.BinaryOperatorTransformer
postdecrement_node: de.tub.pes.syscir.engine.nodetransformer.PrePostModifierTransformer
predecrement_node: de.tub.pes.syscir.engine.nodetransformer.PrePostModifierTransformer
postincrement_node: de.tub.pes.syscir.engine.nodetransformer.PrePostModifierTransformer
preincrement_node: de.tub.pes.syscir.engine.nodetransformer.PrePostModifierTransformer

#special functions
sc_notify: de.tub.pes.syscir.engine.nodetransformer.SCNotifyTransformer

#output
output_stream: de.tub.pes.syscir.engine.nodetransformer.OutputStreamTransformer
standart_manipulator: de.tub.pes.syscir.engine.nodetransformer.StandartManipulatorTransformer

#comment currently used for user annotations
comment: de.tub.pes.syscir.engine.nodetransformer.CommentTransformer

#useless
abstract_declarator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
assignment_operator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
assignment_expression_operator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
unary_operator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
empty_statement: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer

# dyn mem mgnt
# the new transformer encapsulates all new_* tags
new_expression: de.tub.pes.syscir.engine.nodetransformer.NewTransformer
new_type_id: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
new_initializer: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
new_declarator: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
direct_new_declarator: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
delete_expression: de.tub.pes.syscir.engine.nodetransformer.DeleteTransformer
delete_array_expression: de.tub.pes.syscir.engine.nodetransformer.DeleteArrayTransformer

# destructors
# currently not supported
dtor_definition: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
dtor_declarator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer
simple_dtor_declarator: de.tub.pes.syscir.engine.nodetransformer.DoNothingTransformer

#not allowed
goto_statement: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
ellipsis_parameter: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
template_head: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
template_parameter_list: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer
template_parameter: de.tub.pes.syscir.engine.nodetransformer.NotAllowedTransformer

########################## not yet supported ##########################
# abstract_declarator_suffix
# alias_namespace_definition
# alias_namespace_name
# begin_block
# bit_field_member_declaration
# cast_expression
# class_head
# class_name
# class_or_namespace_name
# complicated_name_spec
# conditional_expression
# conversion_function_decl_or_def
# ctor_declarator_lookahead
# cv_qualifier
# do_block
# dtor_ctor_decl_spec
# dyn_process_creation_block_declaration
# escape_block
# exception_declaration
# exception_list
# exception_spec
# extended_namespace_definition
# function_declarator_lookahead
# fzi_sim_directive
# handler
# linkage_specification
# local_watching_block
# m_s_protocol_declaration
# named_namespace_definition
# namespace_body
# namespace_definition
# namespace_name
# namespace_qualified_spec
# not_qualified_id
# optor
# optor_overloading
# original_namespace_definition
# original_namespace_name
# pm_expression
# preprocessor_directive
# ptr_operator
# ptr_to_member
# sc_map_to_target_declaration
# sc_map_to_target
# scope_override_lookahead
# sc_slave
# sc_watching
# sc_watching_list
# simple_type_specifier
# sizeof_expression
# storage_class_specifier
# template_id
# this_node
# throw_statement
# translation_unit
# try_block
# type_specifier
# unnamed_namespace_definition
# using_declaration
# using_directive
